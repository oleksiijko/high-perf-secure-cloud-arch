apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-svc
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-svc
  template:
    metadata:
      annotations:             
        istio.io/dataplane-mode: ambient
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
        traffic.sidecar.istio.io/excludeInboundPorts: "3000"
        status.sidecar.istio.io/port: "0" 
        sidecar.istio.io/proxyCPU: "200m"
        sidecar.istio.io/proxyMemory: "256Mi"
        proxy.istio.io/config: |
          {"holdApplicationUntilProxyStarts": true}
      labels:
        app: auth-svc
        role: backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 65532
      containers:
        - name: auth-svc
          image: auth-svc:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 30   # ≈ 60 с до kill’а
            periodSeconds: 2
            initialDelaySeconds: 15 

          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
            - name: DISABLE_RL
              value: "true"
            - name: LOG_DIR
              value: /app/logs
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: secret
          resources:
            requests: { cpu: "150m", memory: "256Mi" }
            limits:   { cpu: "750m", memory: "512Mi" }
          volumeMounts:
            - name: logs
              mountPath: /app/logs
          securityContext:
            capabilities: { drop: ["ALL"] }
            seccompProfile: { type: RuntimeDefault }
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
      volumes:
        - name: logs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-svc
  namespace: microservices
spec:
  selector:
    app: auth-svc
  ports:
    - name: http
      port: 80
      targetPort: 3000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-svc
  namespace: microservices
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-svc
  minReplicas: 4
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target: { type: Utilization, averageUtilization: 70 }